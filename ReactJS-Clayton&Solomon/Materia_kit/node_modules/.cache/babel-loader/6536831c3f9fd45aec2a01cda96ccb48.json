{"ast":null,"code":"import _defineProperty from \"/home/solomon/Desktop/Materia_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"/home/solomon/Desktop/Materia_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/home/solomon/Desktop/Materia_kit/src/components/Navbars/Navbar.jsx\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\"; // @material-ui/icons\n\nimport Menu from \"@material-ui/icons/Menu\"; // core components\n\nimport AdminNavbarLinks from \"./AdminNavbarLinks.jsx\";\nimport RTLNavbarLinks from \"./RTLNavbarLinks.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport headerStyle from \"assets/jss/material-dashboard-react/components/headerStyle.jsx\";\n\nfunction Header(_ref) {\n  var props = _extends({}, _ref);\n\n  function makeBrand() {\n    var name;\n    props.routes.map(function (prop, key) {\n      if (prop.layout + prop.path === props.location.pathname) {\n        name = props.rtlActive ? prop.rtlName : prop.name;\n      }\n\n      return null;\n    });\n    return name;\n  }\n\n  var classes = props.classes,\n      color = props.color;\n  var appBarClasses = classNames(_defineProperty({}, \" \" + classes[color], color));\n  return React.createElement(AppBar, {\n    className: classes.appBar + appBarClasses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.flex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"transparent\",\n    href: \"#\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, makeBrand())), React.createElement(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, props.rtlActive ? React.createElement(RTLNavbarLinks, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }) : React.createElement(AdminNavbarLinks, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(Hidden, {\n    mdUp: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: props.handleDrawerToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })))));\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"])\n};\nexport default withStyles(headerStyle)(Header);","map":{"version":3,"sources":["/home/solomon/Desktop/Materia_kit/src/components/Navbars/Navbar.jsx"],"names":["React","classNames","PropTypes","withStyles","AppBar","Toolbar","IconButton","Hidden","Menu","AdminNavbarLinks","RTLNavbarLinks","Button","headerStyle","Header","props","makeBrand","name","routes","map","prop","key","layout","path","location","pathname","rtlActive","rtlName","classes","color","appBarClasses","appBar","container","flex","title","handleDrawerToggle","propTypes","object","isRequired","oneOf"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\";\n// @material-ui/icons\nimport Menu from \"@material-ui/icons/Menu\";\n// core components\nimport AdminNavbarLinks from \"./AdminNavbarLinks.jsx\";\nimport RTLNavbarLinks from \"./RTLNavbarLinks.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\n\nimport headerStyle from \"assets/jss/material-dashboard-react/components/headerStyle.jsx\";\n\nfunction Header({ ...props }) {\n  function makeBrand() {\n    var name;\n    props.routes.map((prop, key) => {\n      if (prop.layout + prop.path === props.location.pathname) {\n        name = props.rtlActive ? prop.rtlName : prop.name;\n      }\n      return null;\n    });\n    return name;\n  }\n  const { classes, color } = props;\n  const appBarClasses = classNames({\n    [\" \" + classes[color]]: color\n  });\n  return (\n    <AppBar className={classes.appBar + appBarClasses}>\n      <Toolbar className={classes.container}>\n        <div className={classes.flex}>\n          {/* Here we create navbar brand, based on route name */}\n          <Button color=\"transparent\" href=\"#\" className={classes.title}>\n            {makeBrand()}\n          </Button>\n        </div>\n        <Hidden smDown implementation=\"css\">\n          {props.rtlActive ? <RTLNavbarLinks /> : <AdminNavbarLinks />}\n        </Hidden>\n        <Hidden mdUp implementation=\"css\">\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={props.handleDrawerToggle}\n          >\n            <Menu />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"])\n};\n\nexport default withStyles(headerStyle)(Header);\n"]},"metadata":{},"sourceType":"module"}