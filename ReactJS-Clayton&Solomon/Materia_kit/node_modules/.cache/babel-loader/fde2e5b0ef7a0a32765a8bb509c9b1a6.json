{"ast":null,"code":"import _objectWithoutProperties from \"/home/solomon/Desktop/Materia_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/home/solomon/Desktop/Materia_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/solomon/Desktop/Materia_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/solomon/Desktop/Materia_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/solomon/Desktop/Materia_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/solomon/Desktop/Materia_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/solomon/Desktop/Materia_kit/src/layouts/Admin.jsx\";\n\n/* eslint-disable */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Route, Redirect } from \"react-router-dom\"; // creates a beautiful scrollbar\n\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\"; // core components\n\nimport Navbar from \"components/Navbars/Navbar.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\nimport routes from \"routes.js\";\nimport dashboardStyle from \"assets/jss/material-dashboard-react/layouts/dashboardStyle.jsx\";\nimport image from \"assets/img/sidebar-2.jpg\";\nimport logo from \"assets/img/reactlogo.png\";\nvar switchRoutes = React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, routes.map(function (prop, key) {\n  if (prop.layout === \"/admin\") {\n    return React.createElement(Route, {\n      path: prop.layout + prop.path,\n      component: prop.component,\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  }\n}));\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.handleImageClick = function (image) {\n      _this.setState({\n        image: image\n      });\n    };\n\n    _this.handleColorClick = function (color) {\n      _this.setState({\n        color: color\n      });\n    };\n\n    _this.handleFixedClick = function () {\n      if (_this.state.fixedClasses === \"dropdown\") {\n        _this.setState({\n          fixedClasses: \"dropdown show\"\n        });\n      } else {\n        _this.setState({\n          fixedClasses: \"dropdown\"\n        });\n      }\n    };\n\n    _this.handleDrawerToggle = function () {\n      _this.setState({\n        mobileOpen: !_this.state.mobileOpen\n      });\n    };\n\n    _this.resizeFunction = function () {\n      if (window.innerWidth >= 960) {\n        _this.setState({\n          mobileOpen: false\n        });\n      }\n    };\n\n    _this.state = {\n      image: image,\n      color: \"blue\",\n      hasImage: true,\n      fixedClasses: \"dropdown show\",\n      mobileOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"getRoute\",\n    value: function getRoute() {\n      return this.props.location.pathname !== \"/admin/maps\";\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        var ps = new PerfectScrollbar(this.refs.mainPanel);\n      }\n\n      window.addEventListener(\"resize\", this.resizeFunction);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(e) {\n      if (e.history.location.pathname !== e.location.pathname) {\n        this.refs.mainPanel.scrollTop = 0;\n\n        if (this.state.mobileOpen) {\n          this.setState({\n            mobileOpen: false\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.resizeFunction);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          rest = _objectWithoutProperties(_this$props, [\"classes\"]);\n\n      return React.createElement(\"div\", {\n        className: classes.wrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Sidebar, Object.assign({\n        routes: routes,\n        logoText: \"Creative Tim\",\n        logo: logo,\n        image: this.state.image,\n        handleDrawerToggle: this.handleDrawerToggle,\n        open: this.state.mobileOpen,\n        color: this.state.color\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: classes.mainPanel,\n        ref: \"mainPanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Navbar, Object.assign({\n        routes: routes,\n        handleDrawerToggle: this.handleDrawerToggle\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), this.getRoute() ? React.createElement(\"div\", {\n        className: classes.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, switchRoutes)) : React.createElement(\"div\", {\n        className: classes.map,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, switchRoutes), this.getRoute() ? React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }) : null, React.createElement(FixedPlugin, {\n        handleImageClick: this.handleImageClick,\n        handleColorClick: this.handleColorClick,\n        bgColor: this.state[\"color\"],\n        bgImage: this.state[\"image\"],\n        handleFixedClick: this.handleFixedClick,\n        fixedClasses: this.state.fixedClasses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(dashboardStyle)(Dashboard);","map":{"version":3,"sources":["/home/solomon/Desktop/Materia_kit/src/layouts/Admin.jsx"],"names":["React","PropTypes","Switch","Route","Redirect","PerfectScrollbar","withStyles","Navbar","Footer","Sidebar","FixedPlugin","routes","dashboardStyle","image","logo","switchRoutes","map","prop","key","layout","path","component","Dashboard","props","handleImageClick","setState","handleColorClick","color","handleFixedClick","state","fixedClasses","handleDrawerToggle","mobileOpen","resizeFunction","window","innerWidth","hasImage","location","pathname","navigator","platform","indexOf","ps","refs","mainPanel","addEventListener","e","history","scrollTop","removeEventListener","classes","rest","wrapper","getRoute","content","container","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n// creates a beautiful scrollbar\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// core components\nimport Navbar from \"components/Navbars/Navbar.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\n\nimport routes from \"routes.js\";\n\nimport dashboardStyle from \"assets/jss/material-dashboard-react/layouts/dashboardStyle.jsx\";\n\nimport image from \"assets/img/sidebar-2.jpg\";\nimport logo from \"assets/img/reactlogo.png\";\n\nconst switchRoutes = (\n  <Switch>\n    {routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      }\n    })}\n  </Switch>\n);\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image: image,\n      color: \"blue\",\n      hasImage: true,\n      fixedClasses: \"dropdown show\",\n      mobileOpen: false\n    };\n  }\n  handleImageClick = image => {\n    this.setState({ image: image });\n  };\n  handleColorClick = color => {\n    this.setState({ color: color });\n  };\n  handleFixedClick = () => {\n    if (this.state.fixedClasses === \"dropdown\") {\n      this.setState({ fixedClasses: \"dropdown show\" });\n    } else {\n      this.setState({ fixedClasses: \"dropdown\" });\n    }\n  };\n  handleDrawerToggle = () => {\n    this.setState({ mobileOpen: !this.state.mobileOpen });\n  };\n  getRoute() {\n    return this.props.location.pathname !== \"/admin/maps\";\n  }\n  resizeFunction = () => {\n    if (window.innerWidth >= 960) {\n      this.setState({ mobileOpen: false });\n    }\n  };\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      const ps = new PerfectScrollbar(this.refs.mainPanel);\n    }\n    window.addEventListener(\"resize\", this.resizeFunction);\n  }\n  componentDidUpdate(e) {\n    if (e.history.location.pathname !== e.location.pathname) {\n      this.refs.mainPanel.scrollTop = 0;\n      if (this.state.mobileOpen) {\n        this.setState({ mobileOpen: false });\n      }\n    }\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resizeFunction);\n  }\n  render() {\n    const { classes, ...rest } = this.props;\n    return (\n      <div className={classes.wrapper}>\n        <Sidebar\n          routes={routes}\n          logoText={\"Creative Tim\"}\n          logo={logo}\n          image={this.state.image}\n          handleDrawerToggle={this.handleDrawerToggle}\n          open={this.state.mobileOpen}\n          color={this.state.color}\n          {...rest}\n        />\n        <div className={classes.mainPanel} ref=\"mainPanel\">\n          <Navbar\n            routes={routes}\n            handleDrawerToggle={this.handleDrawerToggle}\n            {...rest}\n          />\n          {/* On the /maps route we want the map to be on full screen - this is not possible if the content and conatiner classes are present because they have some paddings which would make the map smaller */}\n          {this.getRoute() ? (\n            <div className={classes.content}>\n              <div className={classes.container}>{switchRoutes}</div>\n            </div>\n          ) : (\n            <div className={classes.map}>{switchRoutes}</div>\n          )}\n          {this.getRoute() ? <Footer /> : null}\n          <FixedPlugin\n            handleImageClick={this.handleImageClick}\n            handleColorClick={this.handleColorClick}\n            bgColor={this.state[\"color\"]}\n            bgImage={this.state[\"image\"]}\n            handleFixedClick={this.handleFixedClick}\n            fixedClasses={this.state.fixedClasses}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(dashboardStyle)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}